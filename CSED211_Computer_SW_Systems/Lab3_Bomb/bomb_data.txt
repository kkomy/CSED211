<main>
Dump of assembler code for function main:
   0x0000000000400dbd <+0>:     push   %rbx
   0x0000000000400dbe <+1>:     cmp    $0x1,%edi
   0x0000000000400dc1 <+4>:     jne    0x400dd3 <main+22>
   0x0000000000400dc3 <+6>:     mov    0x2039be(%rip),%rax        # 0x604788 <stdin@@GLIBC_2.2.5>
   0x0000000000400dca <+13>:    mov    %rax,0x2039cf(%rip)        # 0x6047a0 <infile>
   0x0000000000400dd1 <+20>:    jmp    0x400e2c <main+111>
   0x0000000000400dd3 <+22>:    mov    %rsi,%rbx
   0x0000000000400dd6 <+25>:    cmp    $0x2,%edi
   0x0000000000400dd9 <+28>:    jne    0x400e10 <main+83>
   0x0000000000400ddb <+30>:    mov    0x8(%rsi),%rdi
   0x0000000000400ddf <+34>:    mov    $0x4028f4,%esi
   0x0000000000400de4 <+39>:    callq  0x400c50 <fopen@plt>
   0x0000000000400de9 <+44>:    mov    %rax,0x2039b0(%rip)        # 0x6047a0 <infile>
   0x0000000000400df0 <+51>:    test   %rax,%rax
   0x0000000000400df3 <+54>:    jne    0x400e2c <main+111>
   0x0000000000400df5 <+56>:    mov    0x8(%rbx),%rdx
   0x0000000000400df9 <+60>:    mov    (%rbx),%rsi
   0x0000000000400dfc <+63>:    mov    $0x402420,%edi
   0x0000000000400e01 <+68>:    callq  0x400b60 <printf@plt>
   0x0000000000400e06 <+73>:    mov    $0x8,%edi
   0x0000000000400e0b <+78>:    callq  0x400c80 <exit@plt>
   0x0000000000400e10 <+83>:    mov    (%rsi),%rsi
   0x0000000000400e13 <+86>:    mov    $0x40243d,%edi
   0x0000000000400e18 <+91>:    mov    $0x0,%eax
   0x0000000000400e1d <+96>:    callq  0x400b60 <printf@plt>
   0x0000000000400e22 <+101>:   mov    $0x8,%edi
   0x0000000000400e27 <+106>:   callq  0x400c80 <exit@plt>
   0x0000000000400e2c <+111>:   callq  0x401427 <initialize_bomb>
   0x0000000000400e31 <+116>:   mov    $0x4024a8,%edi
   0x0000000000400e36 <+121>:   callq  0x400b40 <puts@plt>
   0x0000000000400e3b <+126>:   mov    $0x4024e8,%edi
   0x0000000000400e40 <+131>:   callq  0x400b40 <puts@plt>
   0x0000000000400e45 <+136>:   callq  0x40169c <read_line>
   0x0000000000400e4a <+141>:   mov    %rax,%rdi
   0x0000000000400e4d <+144>:   callq  0x400ef0 <phase_1>
   0x0000000000400e52 <+149>:   callq  0x4017c2 <phase_defused>
   0x0000000000400e57 <+154>:   mov    $0x402518,%edi
   0x0000000000400e5c <+159>:   callq  0x400b40 <puts@plt>
   0x0000000000400e61 <+164>:   callq  0x40169c <read_line>
   0x0000000000400e66 <+169>:   mov    %rax,%rdi
   0x0000000000400e69 <+172>:   callq  0x400f0c <phase_2>
   0x0000000000400e6e <+177>:   callq  0x4017c2 <phase_defused>
   0x0000000000400e73 <+182>:   mov    $0x402457,%edi
   0x0000000000400e78 <+187>:   callq  0x400b40 <puts@plt>
   0x0000000000400e7d <+192>:   callq  0x40169c <read_line>
   0x0000000000400e82 <+197>:   mov    %rax,%rdi
   0x0000000000400e85 <+200>:   callq  0x400f5b <phase_3>
   0x0000000000400e8a <+205>:   callq  0x4017c2 <phase_defused>
   0x0000000000400e8f <+210>:   mov    $0x402475,%edi
   0x0000000000400e94 <+215>:   callq  0x400b40 <puts@plt>
   0x0000000000400e99 <+220>:   callq  0x40169c <read_line>
   0x0000000000400e9e <+225>:   mov    %rax,%rdi
   0x0000000000400ea1 <+228>:   callq  0x4010e0 <phase_4>
   0x0000000000400ea6 <+233>:   callq  0x4017c2 <phase_defused>
   0x0000000000400eab <+238>:   mov    $0x402548,%edi
   0x0000000000400eb0 <+243>:   callq  0x400b40 <puts@plt>
   0x0000000000400eb5 <+248>:   callq  0x40169c <read_line>
   0x0000000000400eba <+253>:   mov    %rax,%rdi
   0x0000000000400ebd <+256>:   callq  0x401131 <phase_5>
   0x0000000000400ec2 <+261>:   callq  0x4017c2 <phase_defused>
   0x0000000000400ec7 <+266>:   mov    $0x402484,%edi
   0x0000000000400ecc <+271>:   callq  0x400b40 <puts@plt>
   0x0000000000400ed1 <+276>:   callq  0x40169c <read_line>
   0x0000000000400ed6 <+281>:   mov    %rax,%rdi
   0x0000000000400ed9 <+284>:   callq  0x40118f <phase_6>
   0x0000000000400ede <+289>:   callq  0x4017c2 <phase_defused>
   0x0000000000400ee3 <+294>:   mov    $0x0,%eax
   0x0000000000400ee8 <+299>:   pop    %rbx
   0x0000000000400ee9 <+300>:   retq   
End of assembler dump.
----------------------------------------------------------------------------------------------------------------
<phase_1>
Dump of assembler code for function phase_1:
   0x0000000000400ef0 <+0>:     sub    $0x8,%rsp
   0x0000000000400ef4 <+4>:     mov    $0x402570,%esi
   0x0000000000400ef9 <+9>:     callq  0x4013be <strings_not_equal>
   0x0000000000400efe <+14>:    test   %eax,%eax
   0x0000000000400f00 <+16>:    je     0x400f07 <phase_1+23>
   0x0000000000400f02 <+18>:    callq  0x401624 <explode_bomb>
   0x0000000000400f07 <+23>:    add    $0x8,%rsp
   0x0000000000400f0b <+27>:    retq   
End of assembler dump.

<strings_not_equal>
Dump of assembler code for function strings_not_equal:
   0x00000000004013be <+0>:     push   %r12
   0x00000000004013c0 <+2>:     push   %rbp
   0x00000000004013c1 <+3>:     push   %rbx
   0x00000000004013c2 <+4>:     mov    %rdi,%rbx
   0x00000000004013c5 <+7>:     mov    %rsi,%rbp
   0x00000000004013c8 <+10>:    callq  0x4013a1 <string_length>
   0x00000000004013cd <+15>:    mov    %eax,%r12d
   0x00000000004013d0 <+18>:    mov    %rbp,%rdi
   0x00000000004013d3 <+21>:    callq  0x4013a1 <string_length>
   0x00000000004013d8 <+26>:    mov    $0x1,%edx
   0x00000000004013dd <+31>:    cmp    %eax,%r12d
   0x00000000004013e0 <+34>:    jne    0x401420 <strings_not_equal+98>
   0x00000000004013e2 <+36>:    movzbl (%rbx),%eax
   0x00000000004013e5 <+39>:    test   %al,%al
   0x00000000004013e7 <+41>:    je     0x40140d <strings_not_equal+79>
   0x00000000004013e9 <+43>:    cmp    0x0(%rbp),%al
   0x00000000004013ec <+46>:    je     0x4013f7 <strings_not_equal+57>
   0x00000000004013ee <+48>:    xchg   %ax,%ax
   0x00000000004013f0 <+50>:    jmp    0x401414 <strings_not_equal+86>
   0x00000000004013f2 <+52>:    cmp    0x0(%rbp),%al
   0x00000000004013f5 <+55>:    jne    0x40141b <strings_not_equal+93>
   0x00000000004013f7 <+57>:    add    $0x1,%rbx
   0x00000000004013fb <+61>:    add    $0x1,%rbp
   0x00000000004013ff <+65>:    movzbl (%rbx),%eax
   0x0000000000401402 <+68>:    test   %al,%al
   0x0000000000401404 <+70>:    jne    0x4013f2 <strings_not_equal+52>
   0x0000000000401406 <+72>:    mov    $0x0,%edx
   0x000000000040140b <+77>:    jmp    0x401420 <strings_not_equal+98>
   0x000000000040140d <+79>:    mov    $0x0,%edx
   0x0000000000401412 <+84>:    jmp    0x401420 <strings_not_equal+98>
   0x0000000000401414 <+86>:    mov    $0x1,%edx
   0x0000000000401419 <+91>:    jmp    0x401420 <strings_not_equal+98>
   0x000000000040141b <+93>:    mov    $0x1,%edx
   0x0000000000401420 <+98>:    mov    %edx,%eax
   0x0000000000401422 <+100>:   pop    %rbx
   0x0000000000401423 <+101>:   pop    %rbp
   0x0000000000401424 <+102>:   pop    %r12
   0x0000000000401426 <+104>:   retq   
End of assembler dump.

<string_length>
Dump of assembler code for function string_length:
   0x00000000004013a1 <+0>:     cmpb   $0x0,(%rdi)
   0x00000000004013a4 <+3>:     je     0x4013b8 <string_length+23>
   0x00000000004013a6 <+5>:     mov    %rdi,%rdx
   0x00000000004013a9 <+8>:     add    $0x1,%rdx
   0x00000000004013ad <+12>:    mov    %edx,%eax
   0x00000000004013af <+14>:    sub    %edi,%eax
   0x00000000004013b1 <+16>:    cmpb   $0x0,(%rdx)
   0x00000000004013b4 <+19>:    jne    0x4013a9 <string_length+8>
   0x00000000004013b6 <+21>:    repz retq 
   0x00000000004013b8 <+23>:    mov    $0x0,%eax
   0x00000000004013bd <+28>:    retq   
End of assembler dump.
----------------------------------------------------------------------------------------------------------------
<phase_2>
Dump of assembler code for function phase_2:
   0x0000000000400f0c <+0>:     push   %rbp
   0x0000000000400f0d <+1>:     push   %rbx
   0x0000000000400f0e <+2>:     sub    $0x28,%rsp
   0x0000000000400f12 <+6>:     mov    %rsp,%rsi
   0x0000000000400f15 <+9>:     callq  0x40165a <read_six_numbers>
   0x0000000000400f1a <+14>:    cmpl   $0x0,(%rsp)
   0x0000000000400f1e <+18>:    jne    0x400f27 <phase_2+27>
   0x0000000000400f20 <+20>:    cmpl   $0x1,0x4(%rsp)
   0x0000000000400f25 <+25>:    je     0x400f48 <phase_2+60>
   0x0000000000400f27 <+27>:    callq  0x401624 <explode_bomb>
   0x0000000000400f2c <+32>:    jmp    0x400f48 <phase_2+60>
   0x0000000000400f2e <+34>:    mov    -0x8(%rbx),%eax
   0x0000000000400f31 <+37>:    add    -0x4(%rbx),%eax
   0x0000000000400f34 <+40>:    cmp    %eax,(%rbx)
   0x0000000000400f36 <+42>:    je     0x400f3d <phase_2+49>
   0x0000000000400f38 <+44>:    callq  0x401624 <explode_bomb>
   0x0000000000400f3d <+49>:    add    $0x4,%rbx
   0x0000000000400f41 <+53>:    cmp    %rbp,%rbx
   0x0000000000400f44 <+56>:    jne    0x400f2e <phase_2+34>
   0x0000000000400f46 <+58>:    jmp    0x400f54 <phase_2+72>
   0x0000000000400f48 <+60>:    lea    0x8(%rsp),%rbx
   0x0000000000400f4d <+65>:    lea    0x18(%rsp),%rbp
   0x0000000000400f52 <+70>:    jmp    0x400f2e <phase_2+34>
   0x0000000000400f54 <+72>:    add    $0x28,%rsp
   0x0000000000400f58 <+76>:    pop    %rbx
   0x0000000000400f59 <+77>:    pop    %rbp
   0x0000000000400f5a <+78>:    retq   
End of assembler dump.

<read_six_numbers>
Dump of assembler code for function read_six_numbers:
   0x000000000040165a <+0>:     sub    $0x18,%rsp
   0x000000000040165e <+4>:     mov    %rsi,%rdx
   0x0000000000401661 <+7>:     lea    0x4(%rsi),%rcx
   0x0000000000401665 <+11>:    lea    0x14(%rsi),%rax
   0x0000000000401669 <+15>:    mov    %rax,0x8(%rsp)
   0x000000000040166e <+20>:    lea    0x10(%rsi),%rax
   0x0000000000401672 <+24>:    mov    %rax,(%rsp)
   0x0000000000401676 <+28>:    lea    0xc(%rsi),%r9
   0x000000000040167a <+32>:    lea    0x8(%rsi),%r8
   0x000000000040167e <+36>:    mov    $0x402861,%esi
   0x0000000000401683 <+41>:    mov    $0x0,%eax
   0x0000000000401688 <+46>:    callq  0x400c30 <__isoc99_sscanf@plt>
   0x000000000040168d <+51>:    cmp    $0x5,%eax
   0x0000000000401690 <+54>:    jg     0x401697 <read_six_numbers+61>
   0x0000000000401692 <+56>:    callq  0x401624 <explode_bomb>
   0x0000000000401697 <+61>:    add    $0x18,%rsp
   0x000000000040169b <+65>:    retq   
End of assembler dump.
----------------------------------------------------------------------------------------------------------------
<phase_3>
Dump of assembler code for function phase_3:
   0x0000000000400f5b <+0>:     sub    $0x18,%rsp
   0x0000000000400f5f <+4>:     lea    0x8(%rsp),%r8
   0x0000000000400f64 <+9>:     lea    0x7(%rsp),%rcx
   0x0000000000400f69 <+14>:    lea    0xc(%rsp),%rdx
   0x0000000000400f6e <+19>:    mov    $0x4025be,%esi
   0x0000000000400f73 <+24>:    mov    $0x0,%eax
   0x0000000000400f78 <+29>:    callq  0x400c30 <__isoc99_sscanf@plt>
   0x0000000000400f7d <+34>:    cmp    $0x2,%eax
   0x0000000000400f80 <+37>:    jg     0x400f87 <phase_3+44>
   0x0000000000400f82 <+39>:    callq  0x401624 <explode_bomb>
   0x0000000000400f87 <+44>:    cmpl   $0x7,0xc(%rsp)
   0x0000000000400f8c <+49>:    ja     0x40108e <phase_3+307>
   0x0000000000400f92 <+55>:    mov    0xc(%rsp),%eax
   0x0000000000400f96 <+59>:    jmpq   *0x4025d0(,%rax,8)
   0x0000000000400f9d <+66>:    mov    $0x69,%eax
   0x0000000000400fa2 <+71>:    cmpl   $0x22c,0x8(%rsp)
   0x0000000000400faa <+79>:    je     0x401098 <phase_3+317>
   0x0000000000400fb0 <+85>:    callq  0x401624 <explode_bomb>
   0x0000000000400fb5 <+90>:    mov    $0x69,%eax
   0x0000000000400fba <+95>:    jmpq   0x401098 <phase_3+317>
   0x0000000000400fbf <+100>:   mov    $0x72,%eax
   0x0000000000400fc4 <+105>:   cmpl   $0x1d6,0x8(%rsp)
   0x0000000000400fcc <+113>:   je     0x401098 <phase_3+317>
   0x0000000000400fd2 <+119>:   callq  0x401624 <explode_bomb>
   0x0000000000400fd7 <+124>:   mov    $0x72,%eax
   0x0000000000400fdc <+129>:   jmpq   0x401098 <phase_3+317>
   0x0000000000400fe1 <+134>:   mov    $0x6d,%eax
   0x0000000000400fe6 <+139>:   cmpl   $0x86,0x8(%rsp)
   0x0000000000400fee <+147>:   je     0x401098 <phase_3+317>
   0x0000000000400ff4 <+153>:   callq  0x401624 <explode_bomb>
   0x0000000000400ff9 <+158>:   mov    $0x6d,%eax
   0x0000000000400ffe <+163>:   jmpq   0x401098 <phase_3+317>
   0x0000000000401003 <+168>:   mov    $0x75,%eax
   0x0000000000401008 <+173>:   cmpl   $0x309,0x8(%rsp)
   0x0000000000401010 <+181>:   je     0x401098 <phase_3+317>
   0x0000000000401016 <+187>:   callq  0x401624 <explode_bomb>
   0x000000000040101b <+192>:   mov    $0x75,%eax
   0x0000000000401020 <+197>:   jmp    0x401098 <phase_3+317>
   0x0000000000401022 <+199>:   mov    $0x78,%eax
   0x0000000000401027 <+204>:   cmpl   $0x288,0x8(%rsp)
   0x000000000040102f <+212>:   je     0x401098 <phase_3+317>
   0x0000000000401031 <+214>:   callq  0x401624 <explode_bomb>
   0x0000000000401036 <+219>:   mov    $0x78,%eax
   0x000000000040103b <+224>:   jmp    0x401098 <phase_3+317>
   0x000000000040103d <+226>:   mov    $0x7a,%eax
   0x0000000000401042 <+231>:   cmpl   $0x90,0x8(%rsp)
   0x000000000040104a <+239>:   je     0x401098 <phase_3+317>
   0x000000000040104c <+241>:   callq  0x401624 <explode_bomb>
   0x0000000000401051 <+246>:   mov    $0x7a,%eax
   0x0000000000401056 <+251>:   jmp    0x401098 <phase_3+317>
   0x0000000000401058 <+253>:   mov    $0x6b,%eax
   0x000000000040105d <+258>:   cmpl   $0xe6,0x8(%rsp)
   0x0000000000401065 <+266>:   je     0x401098 <phase_3+317>
   0x0000000000401067 <+268>:   callq  0x401624 <explode_bomb>
   0x000000000040106c <+273>:   mov    $0x6b,%eax
   0x0000000000401071 <+278>:   jmp    0x401098 <phase_3+317>
   0x0000000000401073 <+280>:   mov    $0x70,%eax
   0x0000000000401078 <+285>:   cmpl   $0xf3,0x8(%rsp)
   0x0000000000401080 <+293>:   je     0x401098 <phase_3+317>
   0x0000000000401082 <+295>:   callq  0x401624 <explode_bomb>
   0x0000000000401087 <+300>:   mov    $0x70,%eax
   0x000000000040108c <+305>:   jmp    0x401098 <phase_3+317>
   0x000000000040108e <+307>:   callq  0x401624 <explode_bomb>
   0x0000000000401093 <+312>:   mov    $0x62,%eax
   0x0000000000401098 <+317>:   cmp    0x7(%rsp),%al
   0x000000000040109c <+321>:   je     0x4010a3 <phase_3+328>
   0x000000000040109e <+323>:   callq  0x401624 <explode_bomb>
   0x00000000004010a3 <+328>:   add    $0x18,%rsp
   0x00000000004010a7 <+332>:   retq   
End of assembler dump.
---------------------------------------------------------------------
<phase_4>
Dump of assembler code for function phase_4:
   0x00000000004010e0 <+0>:     sub    $0x18,%rsp
   0x00000000004010e4 <+4>:     lea    0xc(%rsp),%rcx
   0x00000000004010e9 <+9>:     lea    0x8(%rsp),%rdx
   0x00000000004010ee <+14>:    mov    $0x40286d,%esi
   0x00000000004010f3 <+19>:    mov    $0x0,%eax
   0x00000000004010f8 <+24>:    callq  0x400c30 <__isoc99_sscanf@plt>
   0x00000000004010fd <+29>:    cmp    $0x2,%eax
   0x0000000000401100 <+32>:    jne    0x40110e <phase_4+46>
   0x0000000000401102 <+34>:    mov    0xc(%rsp),%eax
   0x0000000000401106 <+38>:    sub    $0x2,%eax
   0x0000000000401109 <+41>:    cmp    $0x2,%eax
   0x000000000040110c <+44>:    jbe    0x401113 <phase_4+51>
   0x000000000040110e <+46>:    callq  0x401624 <explode_bomb>
   0x0000000000401113 <+51>:    mov    0xc(%rsp),%esi
   0x0000000000401117 <+55>:    mov    $0x7,%edi
   0x000000000040111c <+60>:    callq  0x4010a8 <func4>
   0x0000000000401121 <+65>:    cmp    0x8(%rsp),%eax
   0x0000000000401125 <+69>:    je     0x40112c <phase_4+76>
   0x0000000000401127 <+71>:    callq  0x401624 <explode_bomb>
   0x000000000040112c <+76>:    add    $0x18,%rsp
   0x0000000000401130 <+80>:    retq   
End of assembler dump.

<func4>
Dump of assembler code for function func4:
   0x00000000004010a8 <+0>:     push   %r12
   0x00000000004010aa <+2>:     push   %rbp
   0x00000000004010ab <+3>:     push   %rbx
   0x00000000004010ac <+4>:     mov    %edi,%ebx
   0x00000000004010ae <+6>:     test   %edi,%edi
   0x00000000004010b0 <+8>:     jle    0x4010d6 <func4+46>
   0x00000000004010b2 <+10>:    mov    %esi,%ebp
   0x00000000004010b4 <+12>:    mov    %esi,%eax
   0x00000000004010b6 <+14>:    cmp    $0x1,%edi
   0x00000000004010b9 <+17>:    je     0x4010db <func4+51>
   0x00000000004010bb <+19>:    lea    -0x1(%rdi),%edi
   0x00000000004010be <+22>:    callq  0x4010a8 <func4>
   0x00000000004010c3 <+27>:    lea    (%rax,%rbp,1),%r12d
   0x00000000004010c7 <+31>:    lea    -0x2(%rbx),%edi
   0x00000000004010ca <+34>:    mov    %ebp,%esi
   0x00000000004010cc <+36>:    callq  0x4010a8 <func4>
   0x00000000004010d1 <+41>:    add    %r12d,%eax
   0x00000000004010d4 <+44>:    jmp    0x4010db <func4+51>
   0x00000000004010d6 <+46>:    mov    $0x0,%eax
   0x00000000004010db <+51>:    pop    %rbx
   0x00000000004010dc <+52>:    pop    %rbp
   0x00000000004010dd <+53>:    pop    %r12
   0x00000000004010df <+55>:    retq   
End of assembler dump.
---------------------------------------------------------------------------------
<phase_5>
Dump of assembler code for function phase_5:
   0x0000000000401131 <+0>:     push   %rbx
   0x0000000000401132 <+1>:     sub    $0x10,%rsp
   0x0000000000401136 <+5>:     mov    %rdi,%rbx
   0x0000000000401139 <+8>:     callq  0x4013a1 <string_length>
   0x000000000040113e <+13>:    cmp    $0x6,%eax
   0x0000000000401141 <+16>:    je     0x401182 <phase_5+81>
   0x0000000000401143 <+18>:    callq  0x401624 <explode_bomb>
   0x0000000000401148 <+23>:    jmp    0x401182 <phase_5+81>
   0x000000000040114a <+25>:    movzbl (%rbx,%rax,1),%edx
   0x000000000040114e <+29>:    and    $0xf,%edx
   0x0000000000401151 <+32>:    movzbl 0x402610(%rdx),%edx
   0x0000000000401158 <+39>:    mov    %dl,(%rsp,%rax,1)
   0x000000000040115b <+42>:    add    $0x1,%rax
   0x000000000040115f <+46>:    cmp    $0x6,%rax
   0x0000000000401163 <+50>:    jne    0x40114a <phase_5+25>
   0x0000000000401165 <+52>:    movb   $0x0,0x6(%rsp)
   0x000000000040116a <+57>:    mov    $0x4025c7,%esi
   0x000000000040116f <+62>:    mov    %rsp,%rdi
   0x0000000000401172 <+65>:    callq  0x4013be <strings_not_equal>
   0x0000000000401177 <+70>:    test   %eax,%eax
   0x0000000000401179 <+72>:    je     0x401189 <phase_5+88>
   0x000000000040117b <+74>:    callq  0x401624 <explode_bomb>
   0x0000000000401180 <+79>:    jmp    0x401189 <phase_5+88>
   0x0000000000401182 <+81>:    mov    $0x0,%eax
   0x0000000000401187 <+86>:    jmp    0x40114a <phase_5+25>
   0x0000000000401189 <+88>:    add    $0x10,%rsp
   0x000000000040118d <+92>:    pop    %rbx
   0x000000000040118e <+93>:    retq   
End of assembler dump.
---------------------------------------------------------------------
<phase_6>
Dump of assembler code for function phase_6:
   0x000000000040118f <+0>:     push   %r14
   0x0000000000401191 <+2>:     push   %r13
   0x0000000000401193 <+4>:     push   %r12
   0x0000000000401195 <+6>:     push   %rbp
   0x0000000000401196 <+7>:     push   %rbx
   0x0000000000401197 <+8>:     sub    $0x50,%rsp
   0x000000000040119b <+12>:    lea    0x30(%rsp),%r13
   0x00000000004011a0 <+17>:    mov    %r13,%rsi
   0x00000000004011a3 <+20>:    callq  0x40165a <read_six_numbers>
   0x00000000004011a8 <+25>:    mov    %r13,%r14
   0x00000000004011ab <+28>:    mov    $0x0,%r12d
   0x00000000004011b1 <+34>:    mov    %r13,%rbp
   0x00000000004011b4 <+37>:    mov    0x0(%r13),%eax
   0x00000000004011b8 <+41>:    sub    $0x1,%eax
   0x00000000004011bb <+44>:    cmp    $0x5,%eax
   0x00000000004011be <+47>:    jbe    0x4011c5 <phase_6+54>
   0x00000000004011c0 <+49>:    callq  0x401624 <explode_bomb>
   0x00000000004011c5 <+54>:    add    $0x1,%r12d
   0x00000000004011c9 <+58>:    cmp    $0x6,%r12d
   0x00000000004011cd <+62>:    je     0x4011f1 <phase_6+98>
   0x00000000004011cf <+64>:    mov    %r12d,%ebx
   0x00000000004011d2 <+67>:    movslq %ebx,%rax
   0x00000000004011d5 <+70>:    mov    0x30(%rsp,%rax,4),%eax
   0x00000000004011d9 <+74>:    cmp    %eax,0x0(%rbp)
   0x00000000004011dc <+77>:    jne    0x4011e3 <phase_6+84>
   0x00000000004011de <+79>:    callq  0x401624 <explode_bomb>
   0x00000000004011e3 <+84>:    add    $0x1,%ebx
   0x00000000004011e6 <+87>:    cmp    $0x5,%ebx
   0x00000000004011e9 <+90>:    jle    0x4011d2 <phase_6+67>
   0x00000000004011eb <+92>:    add    $0x4,%r13
   0x00000000004011ef <+96>:    jmp    0x4011b1 <phase_6+34>
   0x00000000004011f1 <+98>:    lea    0x48(%rsp),%rsi
   0x00000000004011f6 <+103>:   mov    %r14,%rax
   0x00000000004011f9 <+106>:   mov    $0x7,%ecx
   0x00000000004011fe <+111>:   mov    %ecx,%edx
   0x0000000000401200 <+113>:   sub    (%rax),%edx
   0x0000000000401202 <+115>:   mov    %edx,(%rax)
   0x0000000000401204 <+117>:   add    $0x4,%rax
   0x0000000000401208 <+121>:   cmp    %rsi,%rax
   0x000000000040120b <+124>:   jne    0x4011fe <phase_6+111>
   0x000000000040120d <+126>:   mov    $0x0,%esi
   0x0000000000401212 <+131>:   jmp    0x401234 <phase_6+165>
   0x0000000000401214 <+133>:   mov    0x8(%rdx),%rdx
   0x0000000000401218 <+137>:   add    $0x1,%eax
   0x000000000040121b <+140>:   cmp    %ecx,%eax
   0x000000000040121d <+142>:   jne    0x401214 <phase_6+133>
   0x000000000040121f <+144>:   jmp    0x401226 <phase_6+151>
   0x0000000000401221 <+146>:   mov    $0x6042f0,%edx
   0x0000000000401226 <+151>:   mov    %rdx,(%rsp,%rsi,2)
   0x000000000040122a <+155>:   add    $0x4,%rsi
   0x000000000040122e <+159>:   cmp    $0x18,%rsi
   0x0000000000401232 <+163>:   je     0x401249 <phase_6+186>
   0x0000000000401234 <+165>:   mov    0x30(%rsp,%rsi,1),%ecx
   0x0000000000401238 <+169>:   cmp    $0x1,%ecx
   0x000000000040123b <+172>:   jle    0x401221 <phase_6+146>
   0x000000000040123d <+174>:   mov    $0x1,%eax
   0x0000000000401242 <+179>:   mov    $0x6042f0,%edx
   0x0000000000401247 <+184>:   jmp    0x401214 <phase_6+133>
   0x0000000000401249 <+186>:   mov    (%rsp),%rbx
   0x000000000040124d <+190>:   lea    0x8(%rsp),%rax
   0x0000000000401252 <+195>:   lea    0x30(%rsp),%rsi
   0x0000000000401257 <+200>:   mov    %rbx,%rcx
   0x000000000040125a <+203>:   mov    (%rax),%rdx
   0x000000000040125d <+206>:   mov    %rdx,0x8(%rcx)
   0x0000000000401261 <+210>:   add    $0x8,%rax
   0x0000000000401265 <+214>:   cmp    %rsi,%rax
   0x0000000000401268 <+217>:   je     0x40126f <phase_6+224>
   0x000000000040126a <+219>:   mov    %rdx,%rcx
   0x000000000040126d <+222>:   jmp    0x40125a <phase_6+203>
   0x000000000040126f <+224>:   movq   $0x0,0x8(%rdx)
   0x0000000000401277 <+232>:   mov    $0x5,%ebp
   0x000000000040127c <+237>:   mov    0x8(%rbx),%rax
   0x0000000000401280 <+241>:   mov    (%rax),%eax
   0x0000000000401282 <+243>:   cmp    %eax,(%rbx)
   0x0000000000401284 <+245>:   jge    0x40128b <phase_6+252>
   0x0000000000401286 <+247>:   callq  0x401624 <explode_bomb>
   0x000000000040128b <+252>:   mov    0x8(%rbx),%rbx
   0x000000000040128f <+256>:   sub    $0x1,%ebp
   0x0000000000401292 <+259>:   jne    0x40127c <phase_6+237>
   0x0000000000401294 <+261>:   add    $0x50,%rsp
   0x0000000000401298 <+265>:   pop    %rbx
   0x0000000000401299 <+266>:   pop    %rbp
   0x000000000040129a <+267>:   pop    %r12
   0x000000000040129c <+269>:   pop    %r13
   0x000000000040129e <+271>:   pop    %r14
   0x00000000004012a0 <+273>:   retq   
End of assembler dump.